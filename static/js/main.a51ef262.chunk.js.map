{"version":3,"sources":["componets/DropDownMenu.js","componets/FormElementParmeters.js","componets/QuanityInput.js","componets/FormElement.js","componets/DesiredResourceForm.js","pots_value.js","componets/PotionReducerSorter.js","componets/PotionDisplay.js","componets/ShowEnergy.js","componets/ConvertPotionsToEnergy.js","componets/ErrorHandling.js","componets/PoitonMap.js","componets/ParagraphBlurb.js","App.js","Store/reducers/desiredResouceReducer.js","Store/reducers/potionCountReducer.js","Store/reducers/energyReducer.js","Store/reducers/errorHandlingReducer.js","Store/reducers/index.js","index.js"],"names":["DropDownMenu","props","className","onClick","eventHandler","buttonInnerText","FormElementParmeters","state","showDropDownMenu","changeDropDownMenuState","event","setState","target","editFormObject","payload","value","innerText","key","this","formSection","index","objectId","edit","headerString","formElementId","parseInt","dropDownClassname","split","arrayOfObjects","dropDownMenu","Affinity","Rareity","startAscension","endAscension","map","e","React","Component","connect","desiredResouceReducer","desiredFormData","dispatch","type","QuanityInput","changeQuanitiy","newQuainity","onChange","min","quanity","FormElement","arrayOfKeys","Object","keys","formObject","pop","formElements","id","DesiredResourceForm","addObjectToArray","length","addObject","mapOverArrayOfObjects","poitons","PotionReducerSorter","iterateOverDesiredFormData","blank","default","i","checkObject","object","values","includes","addToStore","error","String","potionsObject","startLevel","poitonRareityAndLevel","key1","value1","key2","value2","add","int","PotionDisplay","potionString","potionCountReducer","potion","ShowEnergy","overAllEnergyCost","energyReducer","energy","ConvertPotion","spliceState","setToZero","holderEnergy","potionState","arrayOfPotionsType","slice","createArrayOfNumbers","increament","array","numbersArray","push","checkForSmallPotions","level19Potions","level20Dugeons","smallPoitongoal","currentSmallPoitions","ErrorHandling","generateErrorString","errorLines","userErrors","message","errorHandlingReducer","arrayOfAscnsionErrors","PoitonMap","arrayOfPoitions","class","ParagrahBlurb","App","initialState","action","concat","intialState","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a51ef262.chunk.js","sourcesContent":["import React from \"react\"\n\n\nfunction DropDownMenu (props){\n\n    return <div> \n        <button className=\"UserInputButton\" onClick={props.eventHandler}>{props.buttonInnerText}</button>\n    </div>\n}\n\nexport default DropDownMenu ","import React from \"react\"\nimport \"../form.css\"\nimport DropDownMenu from \"./DropDownMenu\"\nimport {connect} from \"react-redux\"\n\nclass FormElementParmeters extends React.Component{\n\n    // changes css rules \n    \n    state = {\n        showDropDownMenu: false,\n    }\n    \n    changeDropDownMenuState =(event)=>{\n        if(this.state.showDropDownMenu == true){\n            this.setState({showDropDownMenu: false})\n        }else{\n            this.setState({showDropDownMenu: true})\n        } \n        if(event.target.className){\n            this.editFormObject(event)\n        }\n    }\n\n    editFormObject(event){\n\n        let payload = {\n            value: event.target.innerText,\n            key: this.props.formSection,\n            index: this.props.objectId\n        }\n        \n        this.props.edit(payload)\n    }\n    \n    render(){\n\n\n        let dropDownMenuInfo = {\n            Affinity: [\"Void\", \"Force\", \"Spirit\", \"Magic\"],\n            Rareity: [\"Uncommon\", \"Rare\", \"Epic\", \"Legendary\"],\n            startAscension: [0,1,2,3,4,5],\n            endAscension: [1,2,3,4,5,6],\n        }\n\n        let headerString = null\n        // get an id based of the className prop\n\n        let formElementId = parseInt(this.props.dropDownClassname.split(\",\")[1])\n        \n        // uses an id and the form section prop to get a string that can be filled in as the header vaule \n        headerString = this.props.arrayOfObjects[formElementId][this.props.formSection]\n        \n        // debugger\n        \n        let dropDownMenu =  dropDownMenuInfo[this.props.formSection].map( e=> <DropDownMenu buttonInnerText = {e} eventHandler={this.changeDropDownMenuState} key={e+this.props.objectId}/>)\n\n        return <div className=\"testThree\" >\n                        <div>\n                            <h5 className=\"header\">  {headerString ? headerString :null}</h5>\n                            <button onClick={ this.changeDropDownMenuState}> choose </button> \n                            {this.state.showDropDownMenu ? dropDownMenu : null}\n                        </div>\n            </div>\n\n    }\n}\n\nconst mapActionsToProps =(dispatch) =>{\n    return {\n        edit: (payload) => dispatch({type: \"EDIT\", payload})\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        arrayOfObjects: state.desiredResouceReducer.desiredFormData\n    }\n}\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(FormElementParmeters)","import React  from \"react\"\nimport {connect} from \"react-redux\"\n\nclass QuanityInput extends React.Component{\n\n\n    changeQuanitiy =(event )=>{\n       let newQuainity =  event.target.value\n       this.props.edit( this.props.objectId ,newQuainity)\n    }\n\n    render(){\n        return <div className=\"testThree \">\n                <input onChange={(event) =>this.changeQuanitiy(event)} className=\"testThree\" type=\"number\" min=\"1\" value={this.props.arrayOfObjects[this.props.objectId].quanity} />\n            </div> \n    }\n\n}\n\nconst mapDispatchToProps =(dispatch) =>{\n    return {\n        edit: (objectId, newQuainity) => dispatch({type: \"CHANGEQUANITY\", objectId, newQuainity})\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        arrayOfObjects: state.desiredResouceReducer.desiredFormData\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuanityInput)","import React from \"react\"\nimport FormElementParmeters from \"./FormElementParmeters\"\nimport QuanityInput from \"./QuanityInput\"\n\n\nclass FormElement extends React.Component{\n\n\n        // change css names at some point \n        \n        render(){\n                // generates an array from the keys in formObject  \n              let  arrayOfKeys = Object.keys(this.props.formObject)\n\n              // removes the string \"id\" and \"qunaity\" from the array \n              arrayOfKeys.pop()\n              arrayOfKeys.pop()\n\n              let  formElements = arrayOfKeys.map( e => <FormElementParmeters formSection = {e} dropDownClassname={e+\",\"+this.props.formObject.id} key= {e+this.props.formObject.id} objectId={this.props.formObject.id} />)\n               \n              // h5 tags are to line up elements on page, do not remove\n               return <td className=\"parent\" >\n                       <div className=\"testThreeA\"> {this.props.formObject.id +1}</div>\n                       {formElements}\n                       <QuanityInput objectId={this.props.formObject.id}/>\n                </td>\n        }\n}\n\nexport default FormElement","import React from \"react\"\nimport FormElement from \"./FormElement\"\nimport {connect} from \"react-redux\"\n\n\nclass DesiredResourceForm extends React.Component{\n\n\n  // creates a new object to add to the desiredFormData array.\n // each object in the desriedResourceReducer has the same id as it's index in the array \n addObjectToArray=()=>{\n       let payload = {\n           Rareity: null, \n           Affinity: null, \n           startAscension: null, \n           endAscension: null,\n           id: this.props.arrayOfObjects.length,\n           quanity: 1\n        }\n        this.props.addObject(payload)\n    }\n\n    render(){\n        \n        //maps over each object in the desiredFormData array from the desiredResouceReducer creates a form for the user input data,\n            let mapOverArrayOfObjects = this.props.arrayOfObjects.map( e => <FormElement key ={e.id+\"form\"} formObject ={e}  />)\n            return <div className=\"floatLeftTest\">\n                <table className =\"testTwo\">\n                    <tbody>\n                        <tr className= \"parent\"> \n                            <th className=\"test\"> Line</th>\n                            <th className=\"test\">Rarity</th>\n                            <th className =\"test\">Affinity</th>\n                            <th className =\"test\">Start Ascension</th>\n                            <th className =\"test\"> End Ascension</th>\n                            <th className= \"testEA\"> Quanity</th>\n                        </tr>\n                    <tr className = \"grandparent\">\n                        {mapOverArrayOfObjects}\n                    </tr>\n                    </tbody>\n                </table>\n                <button onClick={this.addObjectToArray}> add another champion </button>\n            </div>\n        }\n}\n\nconst mapStateToProps = (state) =>{\n\n    return {\n        arrayOfObjects: state.desiredResouceReducer.desiredFormData\n    }\n}\n\nconst mapDispatchToProps =(dispatch) =>{\n    return {\n        addObject: (payload) => dispatch({type: \"ADDOBJECT\", payload})\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DesiredResourceForm) ","\n\nconst poitons = {\n    \"Legendary1\": {\n        \"Arcane\": {\"Greater Arcane\" : 5},\n        \"Magic\": {\"Superior Magic\": 1},\n        \"Void\": {\"Superior Void\": 1 },\n        \"Force\": {\"Superior Force\": 1},\n        \"Spirit\": {\"Superior Spirit\": 1}\n    },\n\n    \"Legendary2\": {\n        \"Arcane\": {\"Superior Arcane\": 2},\n        \"Magic\": {\"Superior Magic\": 2},\n        \"Void\": {\"Superior Void\": 2},\n        \"Force\": {\"Superior Force\": 2},\n        \"Spirit\": {\"Superior Spirit\": 2}\n    },\n\n    \"Legendary3\": {\n        \"Arcane\": {\"Superior Arcane\": 2},\n        \"Magic\": {\"Superior Magic\": 3},\n        \"Void\": {\"Superior Void\": 3},\n        \"Force\": {\"Superior Force\": 3},\n        \"Spirit\": {\"Superior Spirit\": 3}\n    },\n\n    \"Legendary4\": {\n        \"Arcane\": {\"Superior Arcane\": 3},\n        \"Magic\": {\"Superior Magic\": 4},\n        \"Void\": {\"Superior Void\": 4},\n        \"Force\": {\"Superior Force\": 4},\n        \"Spirit\": {\"Superior Spirit\": 4}\n    },\n\n    \"Legendary5\": {\n        \"Arcane\": {\"Superior Arcane\": 4},\n        \"Magic\": {\"Superior Magic\": 5},\n        \"Void\": {\"Superior Void\": 5},\n        \"Force\": {\"Superior Force\": 5},\n        \"Spirit\": {\"Superior Spirit\": 5}\n    },\n\n    \"Legendary6\":{\n        \"Arcane\": {\"Superior Arcane\": 4},\n        \"Magic\": {\"Superior Magic\": 6},\n        \"Void\": {\"Superior Void\": 6},\n        \"Force\": {\"Superior Force\": 6},\n        \"Spirit\": {\"Superior Spirit\": 6}\n    },\n\n\n    \"Epic1\":{\n        \"Arcane\": {\"Greater Arcane\": 3},\n        \"Magic\": {\"Greater Magic\": 4},\n        \"Void\": {\"Greater Void\": 4},\n        \"Force\": {\"Greater Force\": 4},\n        \"Spirit\": {\"Greater Spirit\": 4}\n    },\n\n    \"Epic2\":{\n        \"Arcane\": {\"Greater Arcane\": 5},\n        \"Magic\": {\"Greater Magic\": 7},\n        \"Void\": {\"Greater Void\": 7},\n        \"Force\": {\"Greater Force\": 7},\n        \"Spirit\": {\"Greater Spirit\": 7}\n    },\n\n    \"Epic3\":{\n        \"Arcane\": {\"Greater Arcane\": 7},\n        \"Magic\": {\"Greater Magic\": 9},\n        \"Void\": {\"Greater Void\": 9},\n        \"Force\": {\"Greater Force\": 9},\n        \"Spirit\": {\"Greater Spirit\": 9}\n    },\n\n    \"Epic4\":{\n        \"Arcane\": {\"Superior Arcane\": 1},\n        \"Magic\": {\"Superior Magic\": 3},\n        \"Void\": {\"Superior Void\": 3},\n        \"Force\": {\"Superior Force\": 3},\n        \"Spirit\": {\"Superior Spirit\": 3}\n    },\n\n    \"Epic5\":{\n        \"Arcane\": {\"Superior Arcane\": 2},\n        \"Magic\": {\"Superior Magic\": 3},\n        \"Void\": {\"Superior Void\": 3},\n        \"Force\": {\"Superior Force\": 3},\n        \"Spirit\": {\"Superior Spirit\": 3}\n    },\n\n    \"Epic6\":{\n        \"Arcane\": {\"Superior Arcane\": 2},\n        \"Magic\": {\"Superior Magic\": 4},\n        \"Void\": {\"Superior Void\": 4},\n        \"Force\": {\"Superior Force\": 4},\n        \"Spirit\": {\"Superior Spirit\": 4}\n    }, \n    \n    \"Rare1\":{\n        \"Arcane\": {\"Lesser Arcane\": 2},\n        \"Magic\": {\"Lesser Magic\": 4},\n        \"Void\": {\"Lesser Void\": 4},\n        \"Force\": {\"Lesser Force\": 4},\n        \"Spirit\": {\"Lesser Spirit\": 4}\n    }, \n\n    \"Rare2\":{\n        \"Arcane\": {\"Lesser Arcane\": 3},\n        \"Magic\": {\"Lesser Magic\": 6},\n        \"Void\": {\"Lesser Void\": 6},\n        \"Force\": {\"Lesser Force\": 6},\n        \"Spirit\": {\"Lesser Spirit\": 6}\n    }, \n\n    \"Rare3\":{\n        \"Arcane\": {\"Greater Arcane\": 1},\n        \"Magic\": {\"Greater Magic\": 2},\n        \"Void\": {\"Greater Void\": 2},\n        \"Force\": {\"Greater Force\": 2},\n        \"Spirit\": {\"Greater Spirit\": 2}\n    }, \n\n    \"Rare4\":{\n        \"Arcane\": {\"Greater Arcane\": 2},\n        \"Magic\": {\"Greater Magic\": 2},\n        \"Void\": {\"Greater Void\": 2},\n        \"Force\": {\"Greater Force\": 2},\n        \"Spirit\": {\"Greater Spirit\": 2}\n    }, \n\n    \"Rare5\":{\n        \"Arcane\": {\"Greater Arcane\": 3},\n        \"Magic\": {\"Greater Magic\": 5},\n        \"Void\": {\"Greater Void\": 5},\n        \"Force\": {\"Greater Force\": 5},\n        \"Spirit\": {\"Greater Spirit\": 5}\n    },\n\n    \"Rare6\":{\n        \"Arcane\": {\"Greater Arcane\": 4},\n        \"Magic\": {\"Greater Magic\": 6},\n        \"Void\": {\"Greater Void\": 6},\n        \"Force\": {\"Greater Force\": 6},\n        \"Spirit\": {\"Greater Spirit\": 6}\n    },\n\n    \"Uncommon1\":{\n        \"Arcane\": {\"Lesser Arcane\": 2},\n        \"Magic\": {\"Lesser Magic\": 2},\n        \"Void\": {\"Lesser Void\": 2},\n        \"Force\": {\"Lesser Force\": 2},\n        \"Spirit\": {\"Lesser Spirit\": 2}\n    }, \n\n    \"Uncommon2\":{\n        \"Arcane\": {\"Lesser Arcane\": 2},\n        \"Magic\": {\"Lesser Magic\": 2},\n        \"Void\": {\"Lesser Void\": 2},\n        \"Force\": {\"Lesser Force\": 2},\n        \"Spirit\": {\"Lesser Spirit\": 2}\n    },\n\n    \"Uncommon3\":{\n        \"Arcane\": {\"Lesser Arcane\": 2},\n        \"Magic\": {\"Lesser Magic\": 3},\n        \"Void\": {\"Lesser Void\": 3},\n        \"Force\": {\"Lesser Force\": 3},\n        \"Spirit\": {\"Lesser Spirit\": 3}\n    }, \n\n    \"Uncommon4\":{\n        \"Arcane\": {\"Lesser Arcane\": 3},\n        \"Magic\": {\"Lesser Magic\": 3},\n        \"Void\": {\"Lesser Void\": 3},\n        \"Force\": {\"Lesser Force\": 3},\n        \"Spirit\": {\"Lesser Spirit\": 3}\n    }, \n\n    \"Uncommon5\":{\n        \"Arcane\": {\"Lesser Arcane\": 3},\n        \"Magic\": {\"Lesser Magic\": 5},\n        \"Void\": {\"Lesser Void\": 5},\n        \"Force\": {\"Lesser Force\": 5},\n        \"Spirit\": {\"Lesser Spirit\": 5}\n    }, \n\n    \"Uncommon6\":{\n        \"Arcane\": {\"Lesser Arcane\": 3},\n        \"Magic\": {\"Lesser Magic\": 6},\n        \"Void\": {\"Lesser Void\": 6},\n        \"Force\": {\"Lesser Force\": 6},\n        \"Spirit\": {\"Lesser Spirit\": 6}\n    }, \n\n}\n\nexport {poitons}\n\n","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport {poitons} from \"../pots_value\"\n\nclass PotionReducerSorter extends React.Component{\n    \n    iterateOverDesiredFormData=()=>{\n        // sets store to 0 of everything, if you just add without emptying the store, it generates to many potions\n        this.props.blank()\n        this.props.default()\n\n        for(let i = 0; i < this.props.desiredFormData.length; i++){\n            this.checkObject(this.props.desiredFormData[i])\n        }\n    }\n    \n    checkObject =(object)=>{\n\n        if(Object.values(object).includes(null) != true && object[\"startAscension\"] <  object[\"endAscension\"] ){\n            return this.addToStore(object)\n        }else if (Object.values(object).includes(null) != true && object[\"startAscension\"] >= object[\"endAscension\"]){\n            \n            // adds the line number of the object to an array of all objects with starting ascesnion >= ending ascension \n            this.props.error(String([object.id +1]))\n        }\n    }\n\n    addToStore =(object)=>{\n\n        let potionsObject = poitons\n\n        let startLevel = object[\"startAscension\"]\n        startLevel = parseInt(startLevel) +1\n\n        for(let i = startLevel; i <= object[\"endAscension\"]; i++){\n            \n            let poitonRareityAndLevel = object[\"Rareity\"]+i\n\n            /// creates two key value paris, to be feed into the potions store, ex. key1 = \"Grater Arcane\" value1= 0\n\n            let key1 = Object.keys(potionsObject[poitonRareityAndLevel][\"Arcane\"])[0]\n            \n            let value1 = Object.values(potionsObject[poitonRareityAndLevel][\"Arcane\"])[0]\n            \n            let key2 = Object.keys(potionsObject[poitonRareityAndLevel][object[\"Affinity\"]])[0]\n            \n            let value2 = Object.values(potionsObject[poitonRareityAndLevel][object[\"Affinity\"]])[0]\n            \n            this.props.add(key1,value1,key2,value2, object.quanity)\n        }\n    }\n\n  render(){\n      this.iterateOverDesiredFormData()\n      return null \n  }\n\n}\n\nconst mapDispatchToProps =(dispatch) =>{\n    return {\n        blank: () => dispatch({type: \"BLANKSTATE\"}),\n        default: ()=> dispatch({type: \"DEFAULTSTATE\"}),\n        add: (key1,value1, key2,value2, quanity) => dispatch({type: \"INCREMENTPOTION\",key1,value1,key2,value2, quanity}),\n        error: (int) => dispatch({type: \"ADDTOARRAY\",int}),\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        desiredFormData: state.desiredResouceReducer.desiredFormData\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(PotionReducerSorter)","import React from \"react\"\nimport {connect} from \"react-redux\"\n\n\nclass PotionDisplay extends React.Component{\n\n    render(){\n \n\n        let potionString = null\n        // checks each part of the potionCountReducer store and see if value not zero \n                if( this.props.potionCountReducer[this.props.potion] != 0){\n                    // potionString is an int from the potiionCountReducer \n\n                    potionString = this.props.potionCountReducer[this.props.potion]\n\n                    // converts the the int to a string and add the type of potion based of props\n                    potionString = String(potionString) + this.props.potion\n                    }\n\n                    // only wants to display the string if you have some potions\n        return < div>  {potionString ? potionString : null }    </div>\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        potionCountReducer: state.potionCountReducer\n    }\n}\n\nexport default connect(mapStateToProps)(PotionDisplay)","import React from \"react\"\nimport {connect} from \"react-redux\"\n\n\nclass ShowEnergy extends React.Component{\n\n\n    render(){\n        return <p> on average you will spend {this.props.overAllEnergyCost} engery to accuire these potions </p>\n    }\n}\n\nconst mapStateToProps =(state) => {\n\n    return {\n        overAllEnergyCost: state.energyReducer.energy\n    }\n}\n\n\nexport default connect(mapStateToProps)(ShowEnergy)","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport ShowEnergy from \"./ShowEnergy\"\n\nclass ConvertPotion extends React.Component{\n\n\n    spliceState =()=>{\n\n\n        // this sets energy to zero, this keeps the state from only growing\n        this.props.setToZero()\n\n        let holderEnergy = 0\n\n        // breaks down this.props.potionState into an array \n\n        let arrayOfKeys =  Object.keys(this.props.potionState)\n\n        \n        for(let i = 0; i < arrayOfKeys.length; i+= 3){\n\n            // arrayOfPotionsType ex should be [\"Lesser Arcane\", Greater Arcance\", \"Superior Arcane\"]\n            let arrayOfPotionsType = arrayOfKeys.slice(i, i + 3)\n\n\n           holderEnergy = holderEnergy + this.createArrayOfNumbers(arrayOfPotionsType)\n        } \n\n        this.props.increament( holderEnergy)\n    }\n\n\n    createArrayOfNumbers=( array) =>{\n        let numbersArray = []\n        \n        for(let i = 0 ; i < array.length; i ++){\n            \n            // uses each index in the array to  refernce potionState and get a number for how many potions are needed\n            numbersArray.push(this.props.potionState[array[i]])\n            \n        }\n        \n       return  this.checkForSmallPotions(numbersArray)\n    }\n\n\n    checkForSmallPotions =(array)=>{\n\n        // index zero should be the Lesser potion, these need to be taken care of first. This is the only way to get these potions \n        if(array[0] > 0){\n            \n            this.level19Potions(array)\n\n        }\n\n        return this.level20Dugeons(array)\n\n\n    }\n\n\n    level19Potions =(array) =>{\n\n        // these are average rates you get for doing a single run on this level. \n\n        let lesserPotions = 2.70\n        let greaterPotions = 1.09\n        let superiorPotions = 0.42\n\n        // this is how much energy it cost to do a run on this level\n        let energyCost = 14 \n\n        \n        let smallPoitongoal = array[0]\n        \n        let currentSmallPoitions = 0\n\n        // i is going to be be used to keep track of runs, \n        let i = 0\n\n\n        for( i ; currentSmallPoitions < smallPoitongoal; i++){\n\n            currentSmallPoitions = currentSmallPoitions + lesserPotions\n        }\n\n        // index zero should be an amount of energy, it is no longer the potion count \n        array[0] = i * energyCost\n        // index 1 should be medium potions \n        array[1] = array[1] - i * greaterPotions\n        // index 2 should be bigPotions\n        array[2] = array[2] - i * superiorPotions\n\n    }\n\n\n    level20Dugeons =(array)=>{\n\n        // this is how much energy it cost to do a run on this level\n        let energyCost = 16\n\n         // i is going to be be used to keep track of runs, \n        let i = 0\n\n        // these are average rates you get for doing a single run on this level. \n        let greaterPotions = 1.84\n        let superiorPotions = 1\n\n        // sees if index 1 or two is greater,\n        // you will always run out of the greater value last so don't have to worry about account for left over potions \n        // index 1 should be Greater Potions\n        // index 2 should be Superior Potions \n\n        if( array[1] > array[2]){\n\n            for(i; array[1] > 0 ;i++){\n\n                array[2] = array[2] - superiorPotions\n                array[1] = array[1] - greaterPotions\n            }\n\n        }else {\n\n            for(i; array[2] > 0 ; i++){\n    \n                 array[2] = array[2] - superiorPotions\n                 array[1] = array[1] - greaterPotions\n    \n            } \n\n        }\n\n\n        // index zero should be an amount of energy, it is no longer the potion count \n        let overallEnergy = array[0] + i * energyCost\n\n\n        return overallEnergy\n        \n    }\n\n    render(){\n\n        this.spliceState()\n\n        return <div>\n                <ShowEnergy />\n            </div> \n    }\n}\n\nconst mapStateToProps =(state)=>{\n\n        return  {\n            potionState: state.potionCountReducer,\n        }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    \n        return {\n            increament: (payload) => dispatch({type: \"INCREASEENERGY\", payload}),\n            setToZero: () => dispatch({type: \"INTIALSTATE\"})\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps) (ConvertPotion)","import React from \"react\"\nimport {connect} from \"react-redux\"\n\n\nclass ErrorHandling extends React.Component {\n\n    \n    //creates a string of all the line errors \n    \n    generateErrorString =()=>{\n        let errorLines = \"\"\n\n        for(let i = 0; i < this.props.userErrors.length; i++){\n\n            if( i === this.props.userErrors.length - 1){\n                errorLines = errorLines + \" and \" + this.props.userErrors[i]\n            }else{\n                errorLines = errorLines + this.props.userErrors[i] +  \", \"\n            }\n        }\n            return errorLines\n    }\n\n    render(){\n            let message = null\n\n            if(this.generateErrorString() !== \"\"){\n\n                message = \"error: line\"+ this.generateErrorString()+\" has a has a start ascension that is equal to or greater than end ascension\"\n            }\n        return <p> {message} </p>\n    }\n    \n}\n\nconst mapStateToProps =(state)=>{\n    return {\n        userErrors: state.errorHandlingReducer.arrayOfAscnsionErrors\n    }\n}\n\nexport default connect(mapStateToProps)(ErrorHandling)","\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport PotionDisplay from \"./PotionDisplay\"\nimport ConvertPotion from \"./ConvertPotionsToEnergy\"\nimport ErrorHandling from \"./ErrorHandling\"\n\nclass PoitonMap extends React.Component{\n\n    render(){\n        let arrayOfPoitions = Object.keys(this.props.potionState)\n         \n        arrayOfPoitions = arrayOfPoitions.map( e => <PotionDisplay key={e} potion ={e} />)\n\n        return <div class =\"floatRightTest\">\n            <ErrorHandling />\n            {arrayOfPoitions}\n            <ConvertPotion />\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) =>{\n\n    return {\n        potionState: state.potionCountReducer\n    }\n}\n\nexport default connect(mapStateToProps)(PoitonMap)\n\n","import React from 'react'\n\nfunction ParagrahBlurb (){\n\n        return <p>\n             Hello this is an app for the game Raid Shadow Legends, focused on the\n             ascension mechanic. While playing the game  i have found it hard to plan \n             gaining ascensions levels due to a lack of in game transperancy and \n             shifting needs due to acquirng new champions as you play.\n             In order to adress this i created this app to allow players to enter key information about their \n             ascension needs. As you fill out the form bellow you this app provides\n             all the resources you need for the required levels of ascension. \n\n        </p>\n        \n}\n\nexport default ParagrahBlurb","import React from \"react\"\nimport DesiredResourceForm from \"./componets/DesiredResourceForm\"\nimport PotionReducerSorter from \"./componets/PotionReducerSorter\"\nimport PoitonMap from \"./componets/PoitonMap\"\nimport ParagrahBlurb from \"./componets/ParagraphBlurb\"\nimport \"./form.css\"\n\nfunction App(){\n\n  return <div>\n    <ParagrahBlurb />\n    <div className=\"testFour\">\n      \n    <DesiredResourceForm/>\n    <PoitonMap />\n    </div>\n    <PotionReducerSorter />\n  </div> \n  \n}\n\nexport default App","const initialState = {\n    desiredFormData: [{\n        \"Rareity\": null, \n        \"Affinity\": null, \n        startAscension: null, \n        endAscension: null, \n        id: 0, \n        quanity: 1\n    }]\n}\n\nconst desiredResouceReducer =(state = initialState, action)=>{\n\n    switch(action.type){\n        case \"ADDOBJECT\":\n            return {\n                desiredFormData: state.desiredFormData.concat(action.payload)\n            }\n    \n        case \"EDIT\":\n            return {\n                ...state,\n                 desiredFormData: state.desiredFormData.map( (e) =>{\n                    if(e.id == parseInt(action.payload.index)){\n                        e[action.payload.key] = action.payload.value\n                        return e\n                    }\n                    return e\n                })\n            \n            }\n        \n        case \"CHANGEQUANITY\":\n                // debugger \n            return{\n                ...state,\n                desiredFormData: state.desiredFormData.map( (e) =>{\n                    if(e.id == action.objectId){\n                        e.quanity = parseInt(action.newQuainity)\n                        return e\n                    }\n                    return e\n                })\n            }\n\n    default: \n        return state\n\n    }\n\n}\n\nexport default desiredResouceReducer","const initialState = {\n    \"Lesser Arcane\": 0,\n    \"Greater Arcane\": 0,\n    \"Superior Arcane\": 0,\n    \"Lesser Magic\": 0,\n    \"Greater Magic\": 0,\n    \"Superior Magic\": 0,\n    \"Lesser Void\": 0,\n    \"Greater Void\": 0,\n    \"Superior Void\": 0,\n    \"Lesser Force\": 0,\n    \"Greater Force\": 0,\n    \"Superior Force\": 0,\n    \"Lesser Spirit\": 0,\n    \"Greater Spirit\": 0,\n    \"Superior Spirit\": 0,\n}\n\nconst potionCountReducer =( state = initialState, action)=>{\n    switch(action.type){\n\n        case \"INCREMENTPOTION\":\n            // debugger\n            return {\n                ...state,\n               [action.key1]: state[action.key1] + action.value1 * action.quanity,\n               [action.key2]: state[action.key2] + action.value2 * action.quanity,   \n            }\n\n        case \"BLANKSTATE\": {\n           \n            return {\n            ...initialState\n            }\n        }\n\n        default: \n            return state\n    }\n\n}\n\n\nexport default potionCountReducer","const intialState = {\n    energy: 0\n}\n\n\nconst energyReducer =( state = intialState, action)=>{\n\n    switch(action.type){\n\n        case \"INCREASEENERGY\": {\n\n            // debugger \n\n            return {\n                ...state,\n                energy: state.energy + action.payload\n            }\n        }\n\n        case \"INTIALSTATE\": {\n            return {\n                ...intialState\n            }\n        }\n\n        default: \n            return state \n    }\n\n}\n\nexport default energyReducer","const intialState =  {\n    arrayOfAscnsionErrors: [ ]\n} \n\n\nconst errorHandlingReducer = (state =intialState, action) =>{\n\n    switch(action.type){\n\n        case \"ADDTOARRAY\":\n            // debugger\n        return  {\n            ...state,\n            arrayOfAscnsionErrors: state.arrayOfAscnsionErrors.concat(action.int)\n        }\n\n        case \"DEFAULTSTATE\":\n\n            return {\n                ...intialState\n            }\n\n        default: \n            return state\n    }\n}\n\n\nexport default errorHandlingReducer","import { combineReducers } from \"redux\";\nimport desiredResouceReducer  from \"./desiredResouceReducer\"\nimport potionCountReducer from \"./potionCountReducer\";\nimport energyReducer from \"./energyReducer\";\nimport errorHandlingReducer from \"./errorHandlingReducer\";\n\nconst rootReducer = combineReducers({desiredResouceReducer, potionCountReducer, energyReducer,errorHandlingReducer})\n\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport {Provider} from \"react-redux\"\nimport thunk from \"redux-thunk\"\nimport rootReducer from './Store/reducers/index'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n const store = createStore(rootReducer ,composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n,document.getElementById('root')\n);\n\n"],"sourceRoot":""}