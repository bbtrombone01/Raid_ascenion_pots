{"version":3,"sources":["componets/UserInputTable/AffinityTableData.js","componets/UserInputTable/RarietyTableData.js","componets/UserInputTable/QuanityTableDataInput.js","componets/UserInputTable/FormElement.js","componets/DeleteLine.js","componets/UserInputTable/DesiredResourceForm.js","pots_value.js","componets/PotionDisplay.js","componets/ShowEnergy.js","componets/ConvertPotionsToEnergy.js","componets/ErrorHandling.js","componets/PoitonMap.js","componets/PotionReducerSorter.js","componets/ParagraphBlurb.js","App.js","Store/reducers/desiredResouceReducer.js","Store/reducers/potionCountReducer.js","Store/reducers/energyReducer.js","Store/reducers/errorHandlingReducer.js","Store/reducers/index.js","index.js"],"names":["AffinityTableData","props","useState","currentAffinity","setAffinity","dispatch","useDispatch","isInitialMount","useRef","useEffect","current","type","payload","id","key","field","value","onChange","event","target","className","RarietyTableData","currentRariety","setRariety","QuanityTableDataInput","min","currentCount","setCount","max","FormElement","formObjectId","DeleteLine","state","line","handleFormSubmit","newFormData","desiredFormData","filter","e","i","length","console","log","delete","handleStateChange","setState","parseInt","this","numberFieldRange","onClick","React","Component","connect","desiredResouceReducer","DesiredResourceForm","desiredFormDataState","useSelector","mapOverArrayOfObjects","map","Rareity","Affinity","startAscension","endAscension","quanity","poitons","PotionDisplay","potionString","potionCountReducer","potion","String","ShowEnergy","overAllEnergyCost","energyReducer","energy","ConvertPotion","spliceState","setToZero","holderEnergy","arrayOfKeys","Object","keys","potionState","arrayOfPotionsType","slice","createArrayOfNumbers","increament","array","numbersArray","push","checkForSmallPotions","level19Potions","level20Dugeons","smallPoitongoal","currentSmallPoitions","ErrorHandling","generateErrorString","errorLines","userErrors","message","errorHandlingReducer","arrayOfAscnsionErrors","PoitonMap","arrayOfPoitions","PotionReducerSorter","iterateOverDesiredFormData","blank","default","checkObject","object","values","includes","addToStore","error","potionsObject","startLevel","poitonRareityAndLevel","key1","value1","key2","value2","add","int","ParagrahBlurb","App","initialState","action","concat","objectId","newQuainity","intialState","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aadb647e.chunk.js","sourcesContent":["import {React,useState, useEffect, useRef} from \"react\";\nimport {useDispatch} from \"react-redux\"\n\n\nfunction AffinityTableData(props){\n\n    let [ currentAffinity, setAffinity] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const isInitialMount = useRef(true);\n\n    const changeAffinity =(event )=>{\n\n        setAffinity(event.target.value)\n    }\n\n    const dispatchAffinity =()=>{\n        dispatch({\n            type: \"EDIT\",\n            payload: {\n                id: props.id,\n                key: props.field,\n                value: currentAffinity\n            }\n        })\n    }\n\n    // will only dispatch after the componet has mounted \n    useEffect(() => {\n        if (isInitialMount.current) {\n           isInitialMount.current = false;\n        } else {\n            dispatchAffinity()\n        }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [currentAffinity]);\n\n    return(\n        <select onChange={changeAffinity} className=\"StateData\">\n            <option>choose </option>\n            <option>Spirit</option>\n            <option>Force</option>\n            <option>Magic</option>\n            <option>Void</option>\n        </select>\n    )\n}\n\nexport default AffinityTableData","import {React, useState,useEffect,useRef} from \"react\";\nimport {useDispatch} from \"react-redux\"\n\nfunction RarietyTableData(props){\n\n    let [currentRariety, setRariety] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const isInitialMount = useRef(true);\n\n    const changeRarity =(event)=>{\n\n        setRariety(event.target.value)\n        \n    }\n\n    const dispatchRariety =() =>{\n\n        dispatch({\n            type: \"EDIT\",\n            payload: {\n                id: props.id,\n                key: props.field,\n                value: currentRariety\n            }\n        })\n\n    }\n\n     // will only dispatch after the compont has mounted \n    useEffect(() => {\n        if (isInitialMount.current) {\n           isInitialMount.current = false;\n        } else {\n            dispatchRariety()\n        }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [currentRariety]);\n\n\n    return(\n        <select onChange={changeRarity} className=\"StateData\">\n            <option>choose </option>\n            <option>Uncommon</option>\n            <option>Rare</option>\n            <option>Epic</option>\n            <option>Legendary</option>\n        </select>\n    )\n}\n\nexport default RarietyTableData","import {React, useState, useEffect, useRef} from \"react\";\nimport {useDispatch} from \"react-redux\"\n\n\nfunction QuanityTableDataInput(props){\n\n    let [currentCount, setCount] = useState(props.min)\n\n    const dispatch = useDispatch()\n\n    const isInitialMount = useRef(true);\n    \n    const updateCurrentCount = (event)=>{\n        \n        setCount(event.target.value)\n        \n    }\n\n    const dispatchCurrentCount =()=>{\n        dispatch({\n            type: \"TESTQUALITY\",\n            payload: {\n                field: props.field,\n                value: currentCount,\n                id: props.id\n            }\n        })\n    }\n    \n    // will only dispatch after the componet has mounted \n    useEffect(() => {\n      if (isInitialMount.current) {\n         isInitialMount.current = false;\n      } else {\n          dispatchCurrentCount()\n      }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentCount]);\n\n    return(\n        <input className=\"StateData\" onChange={updateCurrentCount} type=\"number\" value={currentCount} min={props.min} max={props.max} />\n    )\n}\n\n\nexport default QuanityTableDataInput","import React from \"react\"\nimport AffinityTableData from \"./AffinityTableData\"\nimport RarietyTableData from \"./RarietyTableData\"\nimport QuanityTableDataInput from \"./QuanityTableDataInput\"\n\n\nfunction FormElement(props){\n\n        // might call this something like user input table row\n\n               return ( <div className=\"tableInfo\" >\n                       <td className=\"userInputTableRow\"> {props.formObjectId.id} </td>\n                       <RarietyTableData field = \"Rareity\" id={props.formObjectId.id} />\n                       <AffinityTableData field = \"Affinity\" id={props.formObjectId.id} />\n                       <QuanityTableDataInput min=\"0\" max=\"5\"  field = \"startAscension\" id={props.formObjectId.id} />\n                       <QuanityTableDataInput min=\"1\" max=\"6\"  field = \"endAscension\" id={props.formObjectId.id} />\n                       <QuanityTableDataInput min=\"0\" max=\"50\" field = \"quanity\" id={props.formObjectId.id} />\n                </div>)\n}\n\nexport default FormElement","import React from \"react\"\nimport {connect} from \"react-redux\"\n\nclass DeleteLine extends React.Component{\n\n    state = {\n        line: null \n    }\n\n  \n\n    handleFormSubmit =()=>{\n        // creates a new array getting rid of a line based off user input\n        let newFormData = this.props.desiredFormData.filter( (e) => e.id+1 !== this.state.line)\n\n        // iterates throught the array updating every objects id to be one higher, keeps the lines in the right order \n        for (let i = 0; i < newFormData.length; i++){\n            if(newFormData[i].id+1 > this.state.line){\n                console.log(newFormData[i].id)\n                newFormData[i].id = newFormData[i].id - 1\n            }\n            // replaces old state with the newFormData\n            this.props.delete(newFormData)\n        }\n    }\n\n    // changes the state to reflect current nummber  from input \n    handleStateChange = (event)=>{       \n        this.setState({\n            line: parseInt(event.target.value)\n        })\n    }\n\n    \n    \n    render(){\n        return <div className=\"test4a\">\n            <input onChange={(event) =>this.handleStateChange(event)} type=\"number\" min=\"1\" max={this.props.numberFieldRange} />\n            <button onClick={ this.handleFormSubmit}> delete line </button>\n        </div>\n    }\n}\n\nconst mapStateToProps =(state)=>{\n    return {\n        numberFieldRange: state.desiredResouceReducer.desiredFormData.length,\n        desiredFormData: state.desiredResouceReducer.desiredFormData\n    }\n}\n\nconst mapActionsToProps =(dispatch)=>{\n    return {\n        delete: (payload) => dispatch({type: \"DELETE\",payload})\n    }\n}\n\nexport default connect(mapStateToProps,mapActionsToProps)(DeleteLine)","import React from \"react\"\nimport FormElement from \"./FormElement\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport DeleteLine from \"../DeleteLine\"\n\nfunction DesiredResourceForm (){\n\n    // need to figrue out word instead of form \n    // user input table ? \n\n    const desiredFormDataState = useSelector((state) => state.desiredResouceReducer.desiredFormData) \n\n    const dispatch =useDispatch()\n\n  // creates a new object to add to the desiredFormData array.\n  const addObjectToArray=()=>{\n\n        dispatch({\n            type: \"ADDOBJECT\",\n            payload: {\n                Rareity: null, \n                Affinity: null, \n                startAscension: 0, \n                endAscension: 1,\n                id: desiredFormDataState.length + 1,\n                quanity: 0\n            }\n        })\n    }\n\n        //maps over each object in the desiredFormData array from the desiredResouceReducer creates a form for the user input data,\n            let mapOverArrayOfObjects = desiredFormDataState.map( e => <FormElement key ={e.id+\"form\"} formObjectId ={e}  />)\n      \n            return ( <div className=\"userInputParnetContainer\">\n                <table className =\"userInputTable\">\n                    <tbody>\n                        <tr className= \"tableInfo\"> \n                            <th className=\"tableHead\"> Line</th>\n                            <th className=\"tableHead\">Rarity</th>\n                            <th className =\"tableHead\">Affinity</th>\n                            <th className =\"tableHead\">Start Ascension</th>\n                            <th className =\"tableHead\"> End Ascension</th>\n                            <th className= \"tableHead\"> Quanity</th>\n                        </tr>\n                        <tr className>\n                            {mapOverArrayOfObjects}\n                        </tr>\n                    </tbody>\n                </table>\n                <button onClick={addObjectToArray} > add line </button>\n                <DeleteLine />\n            </div>) \n}\n\nexport default DesiredResourceForm","\n\nconst poitons = {\n    \"Legendary1\": {\n        \"Arcane\": {\"Greater Arcane\" : 5},\n        \"Magic\": {\"Superior Magic\": 1},\n        \"Void\": {\"Superior Void\": 1 },\n        \"Force\": {\"Superior Force\": 1},\n        \"Spirit\": {\"Superior Spirit\": 1}\n    },\n\n    \"Legendary2\": {\n        \"Arcane\": {\"Superior Arcane\": 2},\n        \"Magic\": {\"Superior Magic\": 2},\n        \"Void\": {\"Superior Void\": 2},\n        \"Force\": {\"Superior Force\": 2},\n        \"Spirit\": {\"Superior Spirit\": 2}\n    },\n\n    \"Legendary3\": {\n        \"Arcane\": {\"Superior Arcane\": 2},\n        \"Magic\": {\"Superior Magic\": 3},\n        \"Void\": {\"Superior Void\": 3},\n        \"Force\": {\"Superior Force\": 3},\n        \"Spirit\": {\"Superior Spirit\": 3}\n    },\n\n    \"Legendary4\": {\n        \"Arcane\": {\"Superior Arcane\": 3},\n        \"Magic\": {\"Superior Magic\": 4},\n        \"Void\": {\"Superior Void\": 4},\n        \"Force\": {\"Superior Force\": 4},\n        \"Spirit\": {\"Superior Spirit\": 4}\n    },\n\n    \"Legendary5\": {\n        \"Arcane\": {\"Superior Arcane\": 4},\n        \"Magic\": {\"Superior Magic\": 5},\n        \"Void\": {\"Superior Void\": 5},\n        \"Force\": {\"Superior Force\": 5},\n        \"Spirit\": {\"Superior Spirit\": 5}\n    },\n\n    \"Legendary6\":{\n        \"Arcane\": {\"Superior Arcane\": 4},\n        \"Magic\": {\"Superior Magic\": 6},\n        \"Void\": {\"Superior Void\": 6},\n        \"Force\": {\"Superior Force\": 6},\n        \"Spirit\": {\"Superior Spirit\": 6}\n    },\n\n\n    \"Epic1\":{\n        \"Arcane\": {\"Greater Arcane\": 3},\n        \"Magic\": {\"Greater Magic\": 4},\n        \"Void\": {\"Greater Void\": 4},\n        \"Force\": {\"Greater Force\": 4},\n        \"Spirit\": {\"Greater Spirit\": 4}\n    },\n\n    \"Epic2\":{\n        \"Arcane\": {\"Greater Arcane\": 5},\n        \"Magic\": {\"Greater Magic\": 7},\n        \"Void\": {\"Greater Void\": 7},\n        \"Force\": {\"Greater Force\": 7},\n        \"Spirit\": {\"Greater Spirit\": 7}\n    },\n\n    \"Epic3\":{\n        \"Arcane\": {\"Greater Arcane\": 7},\n        \"Magic\": {\"Greater Magic\": 9},\n        \"Void\": {\"Greater Void\": 9},\n        \"Force\": {\"Greater Force\": 9},\n        \"Spirit\": {\"Greater Spirit\": 9}\n    },\n\n    \"Epic4\":{\n        \"Arcane\": {\"Superior Arcane\": 1},\n        \"Magic\": {\"Superior Magic\": 3},\n        \"Void\": {\"Superior Void\": 3},\n        \"Force\": {\"Superior Force\": 3},\n        \"Spirit\": {\"Superior Spirit\": 3}\n    },\n\n    \"Epic5\":{\n        \"Arcane\": {\"Superior Arcane\": 2},\n        \"Magic\": {\"Superior Magic\": 3},\n        \"Void\": {\"Superior Void\": 3},\n        \"Force\": {\"Superior Force\": 3},\n        \"Spirit\": {\"Superior Spirit\": 3}\n    },\n\n    \"Epic6\":{\n        \"Arcane\": {\"Superior Arcane\": 2},\n        \"Magic\": {\"Superior Magic\": 4},\n        \"Void\": {\"Superior Void\": 4},\n        \"Force\": {\"Superior Force\": 4},\n        \"Spirit\": {\"Superior Spirit\": 4}\n    }, \n    \n    \"Rare1\":{\n        \"Arcane\": {\"Lesser Arcane\": 2},\n        \"Magic\": {\"Lesser Magic\": 4},\n        \"Void\": {\"Lesser Void\": 4},\n        \"Force\": {\"Lesser Force\": 4},\n        \"Spirit\": {\"Lesser Spirit\": 4}\n    }, \n\n    \"Rare2\":{\n        \"Arcane\": {\"Lesser Arcane\": 3},\n        \"Magic\": {\"Lesser Magic\": 6},\n        \"Void\": {\"Lesser Void\": 6},\n        \"Force\": {\"Lesser Force\": 6},\n        \"Spirit\": {\"Lesser Spirit\": 6}\n    }, \n\n    \"Rare3\":{\n        \"Arcane\": {\"Greater Arcane\": 1},\n        \"Magic\": {\"Greater Magic\": 2},\n        \"Void\": {\"Greater Void\": 2},\n        \"Force\": {\"Greater Force\": 2},\n        \"Spirit\": {\"Greater Spirit\": 2}\n    }, \n\n    \"Rare4\":{\n        \"Arcane\": {\"Greater Arcane\": 2},\n        \"Magic\": {\"Greater Magic\": 2},\n        \"Void\": {\"Greater Void\": 2},\n        \"Force\": {\"Greater Force\": 2},\n        \"Spirit\": {\"Greater Spirit\": 2}\n    }, \n\n    \"Rare5\":{\n        \"Arcane\": {\"Greater Arcane\": 3},\n        \"Magic\": {\"Greater Magic\": 5},\n        \"Void\": {\"Greater Void\": 5},\n        \"Force\": {\"Greater Force\": 5},\n        \"Spirit\": {\"Greater Spirit\": 5}\n    },\n\n    \"Rare6\":{\n        \"Arcane\": {\"Greater Arcane\": 4},\n        \"Magic\": {\"Greater Magic\": 6},\n        \"Void\": {\"Greater Void\": 6},\n        \"Force\": {\"Greater Force\": 6},\n        \"Spirit\": {\"Greater Spirit\": 6}\n    },\n\n    \"Uncommon1\":{\n        \"Arcane\": {\"Lesser Arcane\": 2},\n        \"Magic\": {\"Lesser Magic\": 2},\n        \"Void\": {\"Lesser Void\": 2},\n        \"Force\": {\"Lesser Force\": 2},\n        \"Spirit\": {\"Lesser Spirit\": 2}\n    }, \n\n    \"Uncommon2\":{\n        \"Arcane\": {\"Lesser Arcane\": 2},\n        \"Magic\": {\"Lesser Magic\": 2},\n        \"Void\": {\"Lesser Void\": 2},\n        \"Force\": {\"Lesser Force\": 2},\n        \"Spirit\": {\"Lesser Spirit\": 2}\n    },\n\n    \"Uncommon3\":{\n        \"Arcane\": {\"Lesser Arcane\": 2},\n        \"Magic\": {\"Lesser Magic\": 3},\n        \"Void\": {\"Lesser Void\": 3},\n        \"Force\": {\"Lesser Force\": 3},\n        \"Spirit\": {\"Lesser Spirit\": 3}\n    }, \n\n    \"Uncommon4\":{\n        \"Arcane\": {\"Lesser Arcane\": 3},\n        \"Magic\": {\"Lesser Magic\": 3},\n        \"Void\": {\"Lesser Void\": 3},\n        \"Force\": {\"Lesser Force\": 3},\n        \"Spirit\": {\"Lesser Spirit\": 3}\n    }, \n\n    \"Uncommon5\":{\n        \"Arcane\": {\"Lesser Arcane\": 3},\n        \"Magic\": {\"Lesser Magic\": 5},\n        \"Void\": {\"Lesser Void\": 5},\n        \"Force\": {\"Lesser Force\": 5},\n        \"Spirit\": {\"Lesser Spirit\": 5}\n    }, \n\n    \"Uncommon6\":{\n        \"Arcane\": {\"Lesser Arcane\": 3},\n        \"Magic\": {\"Lesser Magic\": 6},\n        \"Void\": {\"Lesser Void\": 6},\n        \"Force\": {\"Lesser Force\": 6},\n        \"Spirit\": {\"Lesser Spirit\": 6}\n    }, \n\n}\n\nexport {poitons}\n\n","import React from \"react\"\nimport {connect} from \"react-redux\"\n\n\nclass PotionDisplay extends React.Component{\n\n    render(){\n \n\n        let potionString = null\n        // checks each part of the potionCountReducer store and see if value not zero \n                if( this.props.potionCountReducer[this.props.potion] !== 0){\n                    // potionString is an int from the potiionCountReducer \n\n                    potionString = this.props.potionCountReducer[this.props.potion]\n\n                    // converts the the int to a string and add the type of potion based of props\n                    potionString = String(potionString) + this.props.potion\n                    }\n\n                    // only wants to display the string if you have some potions\n        return < div>  {potionString ? potionString : null }    </div>\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        potionCountReducer: state.potionCountReducer\n    }\n}\n\nexport default connect(mapStateToProps)(PotionDisplay)","import React from \"react\"\nimport {connect} from \"react-redux\"\n\n\nclass ShowEnergy extends React.Component{\n\n\n    render(){\n        return <p> on average you will spend {this.props.overAllEnergyCost} engery to accuire these potions </p>\n    }\n}\n\nconst mapStateToProps =(state) => {\n\n    return {\n        overAllEnergyCost: state.energyReducer.energy\n    }\n}\n\n\nexport default connect(mapStateToProps)(ShowEnergy)","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport ShowEnergy from \"./ShowEnergy\"\n\nclass ConvertPotion extends React.Component{\n\n\n    spliceState =()=>{\n\n\n        // this sets energy to zero, this keeps the state from only growing\n        this.props.setToZero()\n\n        let holderEnergy = 0\n\n        // breaks down this.props.potionState into an array \n\n        let arrayOfKeys =  Object.keys(this.props.potionState)\n\n        \n        for(let i = 0; i < arrayOfKeys.length; i+= 3){\n\n            // arrayOfPotionsType ex should be [\"Lesser Arcane\", Greater Arcance\", \"Superior Arcane\"]\n            let arrayOfPotionsType = arrayOfKeys.slice(i, i + 3)\n\n\n           holderEnergy = holderEnergy + this.createArrayOfNumbers(arrayOfPotionsType)\n        } \n\n        this.props.increament( holderEnergy)\n    }\n\n\n    createArrayOfNumbers=( array) =>{\n        let numbersArray = []\n        \n        for(let i = 0 ; i < array.length; i ++){\n            \n            // uses each index in the array to  refernce potionState and get a number for how many potions are needed\n            numbersArray.push(this.props.potionState[array[i]])\n            \n        }\n        \n       return  this.checkForSmallPotions(numbersArray)\n    }\n\n\n    checkForSmallPotions =(array)=>{\n\n        // index zero should be the Lesser potion, these need to be taken care of first. This is the only way to get these potions \n        if(array[0] > 0){\n            \n            this.level19Potions(array)\n\n        }\n\n        return this.level20Dugeons(array)\n\n    }\n\n\n    level19Potions =(array) =>{\n\n        // these are average rates you get for doing a single run on this level. \n\n        let lesserPotions = 2.70\n        let greaterPotions = 1.09\n        let superiorPotions = 0.42\n\n        // this is how much energy it cost to do a run on this level\n        let energyCost = 14 \n\n        \n        let smallPoitongoal = array[0]\n        \n        let currentSmallPoitions = 0\n\n        // i is going to be be used to keep track of runs, \n        let i = 0\n\n\n        for( i ; currentSmallPoitions < smallPoitongoal; i++){\n\n            currentSmallPoitions = currentSmallPoitions + lesserPotions\n        }\n\n        // index zero should be an amount of energy, it is no longer the potion count \n        array[0] = i * energyCost\n        // index 1 should be medium potions \n        array[1] = array[1] - i * greaterPotions\n        // index 2 should be bigPotions\n        array[2] = array[2] - i * superiorPotions\n\n    }\n\n\n    level20Dugeons =(array)=>{\n\n        // this is how much energy it cost to do a run on this level\n        let energyCost = 16\n\n         // i is going to be be used to keep track of runs, \n        let i = 0\n\n        // these are average rates you get for doing a single run on this level. \n        let greaterPotions = 1.84\n        let superiorPotions = 1\n\n        // sees if index 1 or two is greater,\n        // you will always run out of the greater value last so don't have to worry about account for left over potions \n        // index 1 should be Greater Potions\n        // index 2 should be Superior Potions \n\n        if( array[1] > array[2]){\n\n            for(i; array[1] > 0 ;i++){\n\n                array[2] = array[2] - superiorPotions\n                array[1] = array[1] - greaterPotions\n            }\n\n        }else {\n\n            for(i; array[2] > 0 ; i++){\n    \n                 array[2] = array[2] - superiorPotions\n                 array[1] = array[1] - greaterPotions\n    \n            } \n\n        }\n\n\n        // index zero should be an amount of energy, it is no longer the potion count \n        let overallEnergy = array[0] + i * energyCost\n\n\n        return overallEnergy\n        \n    }\n\n    render(){\n\n        this.spliceState()\n\n        return <div>\n                <ShowEnergy />\n            </div> \n    }\n}\n\nconst mapStateToProps =(state)=>{\n\n        return  {\n            potionState: state.potionCountReducer,\n        }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    \n        return {\n            increament: (payload) => dispatch({type: \"INCREASEENERGY\", payload}),\n            setToZero: () => dispatch({type: \"INTIALSTATE\"})\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps) (ConvertPotion)","import React from \"react\"\nimport {connect} from \"react-redux\"\n\n\nclass ErrorHandling extends React.Component {\n\n    \n    //creates a string of all the line errors \n    \n    generateErrorString =()=>{\n        let errorLines = \"\"\n\n        for(let i = 0; i < this.props.userErrors.length; i++){\n\n            if( i === this.props.userErrors.length - 1){\n                errorLines = errorLines + \" and \" + this.props.userErrors[i]\n            }else{\n                errorLines = errorLines + this.props.userErrors[i] +  \", \"\n            }\n        }\n            return errorLines\n    }\n\n    render(){\n            let message = null\n\n            if(this.generateErrorString() !== \"\"){\n\n                message = \"error: line\"+ this.generateErrorString()+\" has a has a start ascension that is equal to or greater than end ascension\"\n            }\n        return <p> {message} </p>\n    }\n    \n}\n\nconst mapStateToProps =(state)=>{\n    return {\n        userErrors: state.errorHandlingReducer.arrayOfAscnsionErrors\n    }\n}\n\nexport default connect(mapStateToProps)(ErrorHandling)","\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport PotionDisplay from \"./PotionDisplay\"\nimport ConvertPotion from \"./ConvertPotionsToEnergy\"\nimport ErrorHandling from \"./ErrorHandling\"\n\nclass PoitonMap extends React.Component{\n\n    render(){\n        let arrayOfPoitions = Object.keys(this.props.potionState)\n         \n        arrayOfPoitions = arrayOfPoitions.map( e => <PotionDisplay key={e} potion ={e} />)\n\n        return <div className =\"floatRightTest\">\n            <ErrorHandling />\n            {arrayOfPoitions}\n            {/* <ConvertPotion /> */}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) =>{\n\n    return {\n        potionState: state.potionCountReducer\n    }\n}\n\nexport default connect(mapStateToProps)(PoitonMap)\n\n","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport {poitons} from \"../pots_value\"\nimport PoitonMap from \"./PoitonMap\"\n\nclass PotionReducerSorter extends React.Component{\n    \n    iterateOverDesiredFormData=()=>{\n\n        // sets store to 0 of everything, if you just add without emptying the store, it generates to many potions\n        this.props.blank()\n        this.props.default()\n\n        for(let i = 0; i < this.props.desiredFormData.length; i++){\n            this.checkObject(this.props.desiredFormData[i])\n\n            console.log(this.props.desiredFormData[i])\n            console.log( \" this is iterateOver data function \")\n        }\n    }\n    \n    checkObject =(object)=>{\n\n        if(Object.values(object).includes(null)  !== true && object[\"startAscension\"] <  object[\"endAscension\"] && object[\"quanity\"] !== 0 ){\n            console.log(object)\n            return this.addToStore(object)\n        }else if (Object.values(object).includes(null) !== true && object[\"startAscension\"] >= object[\"endAscension\"]){\n            \n            // adds the line number of the object to an array of all objects with starting ascesnion >= ending ascension \n            this.props.error(String([object.id +1]))\n        }\n    }\n\n    addToStore =(object)=>{\n\n        // debugger\n\n        let potionsObject = poitons\n\n        let startLevel = object[\"startAscension\"]\n        startLevel = parseInt(startLevel) +1\n\n        for(let i = startLevel; i <= object[\"endAscension\"]; i++){\n            \n            let poitonRareityAndLevel = object[\"Rareity\"]+i\n             console.log(poitonRareityAndLevel)\n\n            /// creates two key value paris, to be feed into the potions store, ex. key1 = \"Grater Arcane\" value1= 0\n\n            let key1 = Object.keys(potionsObject[poitonRareityAndLevel][\"Arcane\"])[0]\n            \n            let value1 = Object.values(potionsObject[poitonRareityAndLevel][\"Arcane\"])[0]\n            \n            let key2 = Object.keys(potionsObject[poitonRareityAndLevel][object[\"Affinity\"]])[0]\n            \n            let value2 = Object.values(potionsObject[poitonRareityAndLevel][object[\"Affinity\"]])[0]\n            \n            this.props.add(key1,value1,key2,value2, object.quanity)\n\n            console.log(key1, \"this is key1\")\n            console.log(key2, \"this is key2 \")\n            console.log( value1, \"this is value 1\")\n            console.log( value2, \"this is value 2\")\n\n            // debugger\n        }\n\n        \n    }\n\n  render(){\n      this.iterateOverDesiredFormData()\n      return (\n          <PoitonMap />\n      )\n  }\n\n}\n\nconst mapDispatchToProps =(dispatch) =>{\n    return {\n        blank: () => dispatch({type: \"BLANKSTATE\"}),\n        default: ()=> dispatch({type: \"DEFAULTSTATE\"}),\n        add: (key1,value1, key2,value2, quanity) => dispatch({type: \"INCREMENTPOTION\",key1,value1,key2,value2, quanity}),\n        error: (int) => dispatch({type: \"ADDTOARRAY\",int}),\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        desiredFormData: state.desiredResouceReducer.desiredFormData\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(PotionReducerSorter)","import React from 'react'\n\nfunction ParagrahBlurb (){\n\n        return <p>\n            Hello this is a tool for the game “Raid Shadow Legends”, focused on the ascension mechanic. I have found it hard to know what resources are needed to gain ascension levels, due to a lack of transparency and shifting needs as you acquire new champions. In order to address this, I created a tool to allow players to enter information about their ascension needs. As you fill out the form bellow, this tool provides a count of all ascension material needed.\n        </p>\n        \n}\n\nexport default ParagrahBlurb","import React from \"react\"\nimport DesiredResourceForm from \"./componets/UserInputTable/DesiredResourceForm\"\nimport PotionReducerSorter from \"./componets/PotionReducerSorter\"\nimport ParagrahBlurb from \"./componets/ParagraphBlurb\"\nimport \"./form.css\"\n\nfunction App(){\n\n  return <div>\n    <ParagrahBlurb />\n    <div className=\"testFour\">\n    <DesiredResourceForm/>\n    <PotionReducerSorter />\n    </div>\n  </div> \n  \n}\n\nexport default App","const initialState = {\n    desiredFormData: [{\n        \"Rareity\": null, \n        \"Affinity\": null, \n        startAscension: 0, \n        endAscension: 1, \n        id: 1, \n        quanity: 0\n    }]\n}\n\nconst desiredResouceReducer =(state = initialState, action)=>{\n\n    switch(action.type){\n        case \"ADDOBJECT\":\n            return {\n                desiredFormData: state.desiredFormData.concat(action.payload)\n            }\n    \n        case \"EDIT\":\n\n            return {\n                ...state,\n                 desiredFormData: state.desiredFormData.map( (e) =>{\n                    if(e.id === action.payload.id){\n                        console.log(\"hello\")\n                        e[action.payload.key] = action.payload.value\n                        return e\n                    }\n                    return e\n                })\n            \n            }\n        \n        case \"CHANGEQUANITY\":\n        \n            return{\n                ...state,\n                desiredFormData: state.desiredFormData.map( (e) =>{\n                    if(e.id === action.objectId){\n                        e.quanity = parseInt(action.newQuainity)\n                        return e\n                    }\n                    return e\n                })\n            }\n\n        case \"DELETE\":\n            return{\n                ...state,\n                desiredFormData: action.payload\n            }\n        case \"TESTQUALITY\":\n\n            return {\n                ...state,\n                desiredFormData: state.desiredFormData.map((e) =>{ \n                    if( e.id === action.payload.id){\n                        e[action.payload.field] = parseInt(action.payload.value)\n\n                        return e\n                    }\n                        return e\n                })\n            }\n        \n\n    default: \n        return state\n\n    }\n\n}\n\nexport default desiredResouceReducer","const initialState = {\n    \"Lesser Arcane\": 0,\n    \"Greater Arcane\": 0,\n    \"Superior Arcane\": 0,\n    \"Lesser Magic\": 0,\n    \"Greater Magic\": 0,\n    \"Superior Magic\": 0,\n    \"Lesser Void\": 0,\n    \"Greater Void\": 0,\n    \"Superior Void\": 0,\n    \"Lesser Force\": 0,\n    \"Greater Force\": 0,\n    \"Superior Force\": 0,\n    \"Lesser Spirit\": 0,\n    \"Greater Spirit\": 0,\n    \"Superior Spirit\": 0,\n}\n\nconst potionCountReducer =( state = initialState, action)=>{\n    switch(action.type){\n\n        case \"INCREMENTPOTION\":\n            // debugger\n            return {\n                ...state,\n               [action.key1]: state[action.key1] + action.value1 * action.quanity,\n               [action.key2]: state[action.key2] + action.value2 * action.quanity,   \n            }\n\n        case \"BLANKSTATE\": {\n           \n            return {\n            ...initialState\n            }\n        }\n\n        default: \n            return state\n    }\n\n}\n\n\nexport default potionCountReducer","const intialState = {\n    energy: 0\n}\n\n\nconst energyReducer =( state = intialState, action)=>{\n\n    switch(action.type){\n\n        case \"INCREASEENERGY\": {\n\n            // debugger \n\n            return {\n                ...state,\n                energy: state.energy + action.payload\n            }\n        }\n\n        case \"INTIALSTATE\": {\n            return {\n                ...intialState\n            }\n        }\n\n        default: \n            return state \n    }\n\n}\n\nexport default energyReducer","const intialState =  {\n    arrayOfAscnsionErrors: [ ]\n} \n\n\nconst errorHandlingReducer = (state =intialState, action) =>{\n\n    switch(action.type){\n\n        case \"ADDTOARRAY\":\n            // debugger\n        return  {\n            ...state,\n            arrayOfAscnsionErrors: state.arrayOfAscnsionErrors.concat(action.int)\n        }\n\n        case \"DEFAULTSTATE\":\n\n            return {\n                ...intialState\n            }\n\n        default: \n            return state\n    }\n}\n\n\nexport default errorHandlingReducer","import { combineReducers } from \"redux\";\nimport desiredResouceReducer  from \"./desiredResouceReducer\"\nimport potionCountReducer from \"./potionCountReducer\";\nimport energyReducer from \"./energyReducer\";\nimport errorHandlingReducer from \"./errorHandlingReducer\";\n\nconst rootReducer = combineReducers({desiredResouceReducer, potionCountReducer, energyReducer,errorHandlingReducer})\n\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport {Provider} from \"react-redux\"\nimport thunk from \"redux-thunk\"\nimport rootReducer from './Store/reducers/index'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n const store = createStore(rootReducer ,composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n,document.getElementById('root')\n);\n\n"],"sourceRoot":""}