{"version":3,"sources":["componets/UserInputTable/AffinityTableData.js","componets/UserInputTable/RarietyTableData.js","componets/UserInputTable/QuanityTableDataInput.js","componets/UserInputTable/DeleteLine.js","componets/UserInputTable/FormElement.js","componets/UserInputTable/DesiredResourceForm.js","pots_value.js","componets/PotionDisplay.js","componets/ShowEnergy.js","componets/ConvertPotionsToEnergy.js","componets/ErrorHandling.js","componets/PoitonMap.js","componets/PotionReducerSorter.js","componets/ParagraphBlurb.js","App.js","Store/reducers/desiredResouceReducer.js","Store/reducers/potionCountReducer.js","Store/reducers/energyReducer.js","Store/reducers/errorHandlingReducer.js","Store/reducers/index.js","index.js"],"names":["AffinityTableData","props","useState","currentAffinity","setAffinity","dispatch","useDispatch","isInitialMount","useRef","useEffect","current","type","payload","id","key","field","value","defaultSelect","onChange","event","target","className","RarietyTableData","currentRariety","setRariety","QuanityTableDataInput","displayValue","useSelector","state","desiredResouceReducer","desiredFormData","min","currentCount","setCount","max","DeleteLine","desiredFormDataState","onClick","testFilter","filter","e","i","length","FormElement","formObjectId","Rareity","Affinity","DesiredResourceForm","mapOverArrayOfObjects","map","startAscension","endAscension","quanity","poitons","PotionDisplay","potionString","this","potionCountReducer","potion","String","React","Component","connect","ShowEnergy","overAllEnergyCost","energyReducer","energy","ConvertPotion","spliceState","setToZero","holderEnergy","arrayOfKeys","Object","keys","potionState","arrayOfPotionsType","slice","createArrayOfNumbers","increament","array","numbersArray","push","checkForSmallPotions","level19Potions","level20Dugeons","smallPoitongoal","currentSmallPoitions","ErrorHandling","generateErrorString","errorLines","userErrors","message","errorHandlingReducer","arrayOfAscnsionErrors","PoitonMap","arrayOfPoitions","PotionReducerSorter","iterateOverDesiredFormData","blank","default","checkObject","object","values","includes","addToStore","error","potionsObject","startLevel","parseInt","poitonRareityAndLevel","key1","value1","key2","value2","add","int","ParagrahBlurb","App","initialState","action","concat","objectId","newQuainity","intialState","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.657f0f64.chunk.js","sourcesContent":["import {React,useState, useEffect, useRef} from \"react\";\nimport {useDispatch} from \"react-redux\"\n\n\nfunction AffinityTableData(props){\n\n    let [ currentAffinity, setAffinity] = useState(null)\n\n\n    const dispatch = useDispatch()\n\n    const isInitialMount = useRef(true);\n\n    const changeAffinity =(event )=>{\n\n\n        setAffinity(event.target.value)\n    }\n\n    const dispatchAffinity =()=>{\n        dispatch({\n            type: \"EDIT\",\n            payload: {\n                id: props.id,\n                key: props.field,\n                value: currentAffinity\n            }\n        })\n    }\n\n    \n\n    // will only dispatch after the componet has mounted \n    useEffect(() => {\n        if (isInitialMount.current) {\n           isInitialMount.current = false;\n        } else {\n            dispatchAffinity()\n        }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [currentAffinity]);\n\n\n\n    //   debugger\n    return(\n        <select value={props.defaultSelect} onChange={changeAffinity} className=\"StateData\">\n            <option >{props.defaultSelect} </option>\n            <option>Spirit</option>\n            <option>Force</option>\n            <option>Magic</option>\n            <option>Void</option>\n        </select>\n    )\n}\n\nexport default AffinityTableData","import {React, useState,useEffect,useRef} from \"react\";\nimport {useDispatch} from \"react-redux\"\n\nfunction RarietyTableData(props){\n\n    let [currentRariety, setRariety] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const isInitialMount = useRef(true);\n\n    const changeRarity =(event)=>{\n\n        setRariety(event.target.value)\n        \n    }\n\n    const dispatchRariety =() =>{\n\n        dispatch({\n            type: \"EDIT\",\n            payload: {\n                id: props.id,\n                key: props.field,\n                value: currentRariety\n            }\n        })\n\n    }\n\n     // will only dispatch after the compont has mounted \n    useEffect(() => {\n        if (isInitialMount.current) {\n           isInitialMount.current = false;\n        } else {\n            dispatchRariety()\n        }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [currentRariety]);\n\n\n    return(\n        <select value={props.defaultSelect} onChange={changeRarity} className=\"StateData\">\n            <option>choose </option>\n            <option>Uncommon</option>\n            <option>Rare</option>\n            <option>Epic</option>\n            <option>Legendary</option>\n        </select>\n    )\n}\n\nexport default RarietyTableData","import {React, useState, useEffect, useRef} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\"\n\n\nfunction QuanityTableDataInput(props){\n\n    const  displayValue = useSelector((state) => state.desiredResouceReducer.desiredFormData[props.id-1])\n\n    let [currentCount, setCount] = useState(props.min)\n\n    const dispatch = useDispatch()\n\n    const isInitialMount = useRef(true);\n    \n    const updateCurrentCount = (event)=>{\n        \n        setCount(event.target.value)\n        \n    }\n\n    const dispatchCurrentCount =()=>{\n        dispatch({\n            type: \"TESTQUALITY\",\n            payload: {\n                field: props.field,\n                value: currentCount,\n                id: props.id\n            }\n        })\n    }\n    \n    // will only dispatch after the componet has mounted \n    useEffect(() => {\n      if (isInitialMount.current) {\n         isInitialMount.current = false;\n      } else {\n          dispatchCurrentCount()\n      }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentCount]);\n\n    return(\n        <input className=\"StateData\"  onChange={updateCurrentCount} value={displayValue[props.field]} type=\"number\"  min={props.min} max={props.max} />\n    )\n}\n\n\nexport default QuanityTableDataInput","import {React} from \"react\"\nimport {useDispatch, useSelector} from \"react-redux\"\n\nfunction DeleteLine (props){\n\n    const desiredFormDataState = useSelector((state) => state.desiredResouceReducer.desiredFormData) \n\n    const dispatch = useDispatch()\n // maybe an x instead of the word delete\n\n    \n    function deleteLine(){\n\n        let testFilter = desiredFormDataState.filter((e) => e !== desiredFormDataState[props.id-1])\n\n        for(let i = 0 ;i < testFilter.length; i++){\n\n            if(testFilter[i].id > props.id){\n\n                testFilter[i].id = testFilter[i].id -1\n            }\n\n        }\n\n        dispatch({\n            type: \"DELETE\",\n            payload:  testFilter\n        })\n    }\n\n    \n        return (<div className=\"StateData\">\n            <button onClick={deleteLine} >delete line</button>\n        </div>)\n    \n}\n\nexport default DeleteLine","import React from \"react\"\nimport AffinityTableData from \"./AffinityTableData\"\nimport RarietyTableData from \"./RarietyTableData\"\nimport QuanityTableDataInput from \"./QuanityTableDataInput\"\nimport DeleteLine from \"./DeleteLine\"\n\nfunction FormElement(props){\n\n \n\n        // might call this something like user input table row\n\n               return ( <div className=\"tableInfo\" >\n                       <td className=\"userInputTableRow\"> {props.formObjectId.id} </td>\n                       <RarietyTableData field = \"Rareity\" defaultSelect={props.formObjectId.Rareity} id={props.formObjectId.id} />\n                       <AffinityTableData field = \"Affinity\" defaultSelect={props.formObjectId.Affinity} id={props.formObjectId.id} />\n                       <QuanityTableDataInput min=\"0\" max=\"5\"  field = \"startAscension\" id={props.formObjectId.id} />\n                       <QuanityTableDataInput min=\"1\" max=\"6\"  field = \"endAscension\" id={props.formObjectId.id} />\n                       <QuanityTableDataInput min=\"0\" max=\"50\" field = \"quanity\" id={props.formObjectId.id} />\n                       <DeleteLine id={props.formObjectId.id}/>\n                </div>)\n}\n\nexport default FormElement","import React from \"react\"\nimport FormElement from \"./FormElement\"\nimport {useSelector, useDispatch} from \"react-redux\"\n\nfunction DesiredResourceForm (){\n\n    // need to figrue out word instead of form \n    // user input table ? \n\n    const desiredFormDataState = useSelector((state) => state.desiredResouceReducer.desiredFormData) \n\n    const dispatch =useDispatch()\n\n  // creates a new object to add to the desiredFormData array.\n  const addObjectToArray=()=>{\n\n        dispatch({\n            type: \"ADDOBJECT\",\n            payload: {\n                Rareity: \"choose\", \n                Affinity: \"choose\", \n                startAscension: 0, \n                endAscension: 1,\n                id: desiredFormDataState.length + 1,\n                quanity: 0\n            }\n        })\n    }\n\n        //maps over each object in the desiredFormData array from the desiredResouceReducer creates a form for the user input data,\n            let mapOverArrayOfObjects = desiredFormDataState.map( e => <FormElement key ={e.id+\"form\"} formObjectId ={e}  />)\n      \n            return ( <div className=\"userInputParnetContainer\">\n                <table className =\"userInputTable\">\n                    <tbody>\n                        <tr className= \"tableInfo\"> \n                            <th className=\"tableHead\"> Line</th>\n                            <th className=\"tableHead\">Rarity</th>\n                            <th className =\"tableHead\">Affinity</th>\n                            <th className =\"tableHead\">Start Ascension</th>\n                            <th className =\"tableHead\"> End Ascension</th>\n                            <th className= \"tableHead\"> Quanity</th>\n                            <th className=\"tableHead\"> </th>\n                        </tr>\n                        <tr className>\n                            {mapOverArrayOfObjects}\n                        </tr>\n                    </tbody>\n                <button className=\"buttonTest\" onClick={addObjectToArray} > add line </button>\n                </table>\n            </div>) \n}\n\nexport default DesiredResourceForm","\n\nconst poitons = {\n    \"Legendary1\": {\n        \"Arcane\": {\"Greater Arcane\" : 5},\n        \"Magic\": {\"Superior Magic\": 1},\n        \"Void\": {\"Superior Void\": 1 },\n        \"Force\": {\"Superior Force\": 1},\n        \"Spirit\": {\"Superior Spirit\": 1}\n    },\n\n    \"Legendary2\": {\n        \"Arcane\": {\"Superior Arcane\": 2},\n        \"Magic\": {\"Superior Magic\": 2},\n        \"Void\": {\"Superior Void\": 2},\n        \"Force\": {\"Superior Force\": 2},\n        \"Spirit\": {\"Superior Spirit\": 2}\n    },\n\n    \"Legendary3\": {\n        \"Arcane\": {\"Superior Arcane\": 2},\n        \"Magic\": {\"Superior Magic\": 3},\n        \"Void\": {\"Superior Void\": 3},\n        \"Force\": {\"Superior Force\": 3},\n        \"Spirit\": {\"Superior Spirit\": 3}\n    },\n\n    \"Legendary4\": {\n        \"Arcane\": {\"Superior Arcane\": 3},\n        \"Magic\": {\"Superior Magic\": 4},\n        \"Void\": {\"Superior Void\": 4},\n        \"Force\": {\"Superior Force\": 4},\n        \"Spirit\": {\"Superior Spirit\": 4}\n    },\n\n    \"Legendary5\": {\n        \"Arcane\": {\"Superior Arcane\": 4},\n        \"Magic\": {\"Superior Magic\": 5},\n        \"Void\": {\"Superior Void\": 5},\n        \"Force\": {\"Superior Force\": 5},\n        \"Spirit\": {\"Superior Spirit\": 5}\n    },\n\n    \"Legendary6\":{\n        \"Arcane\": {\"Superior Arcane\": 4},\n        \"Magic\": {\"Superior Magic\": 6},\n        \"Void\": {\"Superior Void\": 6},\n        \"Force\": {\"Superior Force\": 6},\n        \"Spirit\": {\"Superior Spirit\": 6}\n    },\n\n\n    \"Epic1\":{\n        \"Arcane\": {\"Greater Arcane\": 3},\n        \"Magic\": {\"Greater Magic\": 4},\n        \"Void\": {\"Greater Void\": 4},\n        \"Force\": {\"Greater Force\": 4},\n        \"Spirit\": {\"Greater Spirit\": 4}\n    },\n\n    \"Epic2\":{\n        \"Arcane\": {\"Greater Arcane\": 5},\n        \"Magic\": {\"Greater Magic\": 7},\n        \"Void\": {\"Greater Void\": 7},\n        \"Force\": {\"Greater Force\": 7},\n        \"Spirit\": {\"Greater Spirit\": 7}\n    },\n\n    \"Epic3\":{\n        \"Arcane\": {\"Greater Arcane\": 7},\n        \"Magic\": {\"Greater Magic\": 9},\n        \"Void\": {\"Greater Void\": 9},\n        \"Force\": {\"Greater Force\": 9},\n        \"Spirit\": {\"Greater Spirit\": 9}\n    },\n\n    \"Epic4\":{\n        \"Arcane\": {\"Superior Arcane\": 1},\n        \"Magic\": {\"Superior Magic\": 3},\n        \"Void\": {\"Superior Void\": 3},\n        \"Force\": {\"Superior Force\": 3},\n        \"Spirit\": {\"Superior Spirit\": 3}\n    },\n\n    \"Epic5\":{\n        \"Arcane\": {\"Superior Arcane\": 2},\n        \"Magic\": {\"Superior Magic\": 3},\n        \"Void\": {\"Superior Void\": 3},\n        \"Force\": {\"Superior Force\": 3},\n        \"Spirit\": {\"Superior Spirit\": 3}\n    },\n\n    \"Epic6\":{\n        \"Arcane\": {\"Superior Arcane\": 2},\n        \"Magic\": {\"Superior Magic\": 4},\n        \"Void\": {\"Superior Void\": 4},\n        \"Force\": {\"Superior Force\": 4},\n        \"Spirit\": {\"Superior Spirit\": 4}\n    }, \n    \n    \"Rare1\":{\n        \"Arcane\": {\"Lesser Arcane\": 2},\n        \"Magic\": {\"Lesser Magic\": 4},\n        \"Void\": {\"Lesser Void\": 4},\n        \"Force\": {\"Lesser Force\": 4},\n        \"Spirit\": {\"Lesser Spirit\": 4}\n    }, \n\n    \"Rare2\":{\n        \"Arcane\": {\"Lesser Arcane\": 3},\n        \"Magic\": {\"Lesser Magic\": 6},\n        \"Void\": {\"Lesser Void\": 6},\n        \"Force\": {\"Lesser Force\": 6},\n        \"Spirit\": {\"Lesser Spirit\": 6}\n    }, \n\n    \"Rare3\":{\n        \"Arcane\": {\"Greater Arcane\": 1},\n        \"Magic\": {\"Greater Magic\": 2},\n        \"Void\": {\"Greater Void\": 2},\n        \"Force\": {\"Greater Force\": 2},\n        \"Spirit\": {\"Greater Spirit\": 2}\n    }, \n\n    \"Rare4\":{\n        \"Arcane\": {\"Greater Arcane\": 2},\n        \"Magic\": {\"Greater Magic\": 2},\n        \"Void\": {\"Greater Void\": 2},\n        \"Force\": {\"Greater Force\": 2},\n        \"Spirit\": {\"Greater Spirit\": 2}\n    }, \n\n    \"Rare5\":{\n        \"Arcane\": {\"Greater Arcane\": 3},\n        \"Magic\": {\"Greater Magic\": 5},\n        \"Void\": {\"Greater Void\": 5},\n        \"Force\": {\"Greater Force\": 5},\n        \"Spirit\": {\"Greater Spirit\": 5}\n    },\n\n    \"Rare6\":{\n        \"Arcane\": {\"Greater Arcane\": 4},\n        \"Magic\": {\"Greater Magic\": 6},\n        \"Void\": {\"Greater Void\": 6},\n        \"Force\": {\"Greater Force\": 6},\n        \"Spirit\": {\"Greater Spirit\": 6}\n    },\n\n    \"Uncommon1\":{\n        \"Arcane\": {\"Lesser Arcane\": 2},\n        \"Magic\": {\"Lesser Magic\": 2},\n        \"Void\": {\"Lesser Void\": 2},\n        \"Force\": {\"Lesser Force\": 2},\n        \"Spirit\": {\"Lesser Spirit\": 2}\n    }, \n\n    \"Uncommon2\":{\n        \"Arcane\": {\"Lesser Arcane\": 2},\n        \"Magic\": {\"Lesser Magic\": 2},\n        \"Void\": {\"Lesser Void\": 2},\n        \"Force\": {\"Lesser Force\": 2},\n        \"Spirit\": {\"Lesser Spirit\": 2}\n    },\n\n    \"Uncommon3\":{\n        \"Arcane\": {\"Lesser Arcane\": 2},\n        \"Magic\": {\"Lesser Magic\": 3},\n        \"Void\": {\"Lesser Void\": 3},\n        \"Force\": {\"Lesser Force\": 3},\n        \"Spirit\": {\"Lesser Spirit\": 3}\n    }, \n\n    \"Uncommon4\":{\n        \"Arcane\": {\"Lesser Arcane\": 3},\n        \"Magic\": {\"Lesser Magic\": 3},\n        \"Void\": {\"Lesser Void\": 3},\n        \"Force\": {\"Lesser Force\": 3},\n        \"Spirit\": {\"Lesser Spirit\": 3}\n    }, \n\n    \"Uncommon5\":{\n        \"Arcane\": {\"Lesser Arcane\": 3},\n        \"Magic\": {\"Lesser Magic\": 5},\n        \"Void\": {\"Lesser Void\": 5},\n        \"Force\": {\"Lesser Force\": 5},\n        \"Spirit\": {\"Lesser Spirit\": 5}\n    }, \n\n    \"Uncommon6\":{\n        \"Arcane\": {\"Lesser Arcane\": 3},\n        \"Magic\": {\"Lesser Magic\": 6},\n        \"Void\": {\"Lesser Void\": 6},\n        \"Force\": {\"Lesser Force\": 6},\n        \"Spirit\": {\"Lesser Spirit\": 6}\n    }, \n\n}\n\nexport {poitons}\n\n","import React from \"react\"\nimport {connect} from \"react-redux\"\n\n\nclass PotionDisplay extends React.Component{\n\n    render(){\n \n\n        let potionString = null\n        // checks each part of the potionCountReducer store and see if value not zero \n                if( this.props.potionCountReducer[this.props.potion] !== 0){\n                    // potionString is an int from the potiionCountReducer \n\n                    potionString = this.props.potionCountReducer[this.props.potion]\n\n                    // converts the the int to a string and add the type of potion based of props\n                    potionString = String(potionString) + this.props.potion\n                    }\n\n                    // only wants to display the string if you have some potions\n        return < div>  {potionString ? potionString : null }    </div>\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        potionCountReducer: state.potionCountReducer\n    }\n}\n\nexport default connect(mapStateToProps)(PotionDisplay)","import React from \"react\"\nimport {connect} from \"react-redux\"\n\n\nclass ShowEnergy extends React.Component{\n\n\n    render(){\n        return <p> on average you will spend {this.props.overAllEnergyCost} engery to accuire these potions </p>\n    }\n}\n\nconst mapStateToProps =(state) => {\n\n    return {\n        overAllEnergyCost: state.energyReducer.energy\n    }\n}\n\n\nexport default connect(mapStateToProps)(ShowEnergy)","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport ShowEnergy from \"./ShowEnergy\"\n\nclass ConvertPotion extends React.Component{\n\n\n    spliceState =()=>{\n\n\n        // this sets energy to zero, this keeps the state from only growing\n        this.props.setToZero()\n\n        let holderEnergy = 0\n\n        // breaks down this.props.potionState into an array \n\n        let arrayOfKeys =  Object.keys(this.props.potionState)\n\n        \n        for(let i = 0; i < arrayOfKeys.length; i+= 3){\n\n            // arrayOfPotionsType ex should be [\"Lesser Arcane\", Greater Arcance\", \"Superior Arcane\"]\n            let arrayOfPotionsType = arrayOfKeys.slice(i, i + 3)\n\n\n           holderEnergy = holderEnergy + this.createArrayOfNumbers(arrayOfPotionsType)\n        } \n\n        this.props.increament( holderEnergy)\n    }\n\n\n    createArrayOfNumbers=( array) =>{\n        let numbersArray = []\n        \n        for(let i = 0 ; i < array.length; i ++){\n            \n            // uses each index in the array to  refernce potionState and get a number for how many potions are needed\n            numbersArray.push(this.props.potionState[array[i]])\n            \n        }\n        \n       return  this.checkForSmallPotions(numbersArray)\n    }\n\n\n    checkForSmallPotions =(array)=>{\n\n        // index zero should be the Lesser potion, these need to be taken care of first. This is the only way to get these potions \n        if(array[0] > 0){\n            \n            this.level19Potions(array)\n\n        }\n\n        return this.level20Dugeons(array)\n\n    }\n\n\n    level19Potions =(array) =>{\n\n        // these are average rates you get for doing a single run on this level. \n\n        let lesserPotions = 2.70\n        let greaterPotions = 1.09\n        let superiorPotions = 0.42\n\n        // this is how much energy it cost to do a run on this level\n        let energyCost = 14 \n\n        \n        let smallPoitongoal = array[0]\n        \n        let currentSmallPoitions = 0\n\n        // i is going to be be used to keep track of runs, \n        let i = 0\n\n\n        for( i ; currentSmallPoitions < smallPoitongoal; i++){\n\n            currentSmallPoitions = currentSmallPoitions + lesserPotions\n        }\n\n        // index zero should be an amount of energy, it is no longer the potion count \n        array[0] = i * energyCost\n        // index 1 should be medium potions \n        array[1] = array[1] - i * greaterPotions\n        // index 2 should be bigPotions\n        array[2] = array[2] - i * superiorPotions\n\n    }\n\n\n    level20Dugeons =(array)=>{\n\n        // this is how much energy it cost to do a run on this level\n        let energyCost = 16\n\n         // i is going to be be used to keep track of runs, \n        let i = 0\n\n        // these are average rates you get for doing a single run on this level. \n        let greaterPotions = 1.84\n        let superiorPotions = 1\n\n        // sees if index 1 or two is greater,\n        // you will always run out of the greater value last so don't have to worry about account for left over potions \n        // index 1 should be Greater Potions\n        // index 2 should be Superior Potions \n\n        if( array[1] > array[2]){\n\n            for(i; array[1] > 0 ;i++){\n\n                array[2] = array[2] - superiorPotions\n                array[1] = array[1] - greaterPotions\n            }\n\n        }else {\n\n            for(i; array[2] > 0 ; i++){\n    \n                 array[2] = array[2] - superiorPotions\n                 array[1] = array[1] - greaterPotions\n    \n            } \n\n        }\n\n\n        // index zero should be an amount of energy, it is no longer the potion count \n        let overallEnergy = array[0] + i * energyCost\n\n\n        return overallEnergy\n        \n    }\n\n    render(){\n\n        this.spliceState()\n\n        return <div>\n                <ShowEnergy />\n            </div> \n    }\n}\n\nconst mapStateToProps =(state)=>{\n\n        return  {\n            potionState: state.potionCountReducer,\n        }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    \n        return {\n            increament: (payload) => dispatch({type: \"INCREASEENERGY\", payload}),\n            setToZero: () => dispatch({type: \"INTIALSTATE\"})\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps) (ConvertPotion)","import React from \"react\"\nimport {connect} from \"react-redux\"\n\n\nclass ErrorHandling extends React.Component {\n\n    \n    //creates a string of all the line errors \n    \n    generateErrorString =()=>{\n        let errorLines = \"\"\n\n        for(let i = 0; i < this.props.userErrors.length; i++){\n\n            if( i === this.props.userErrors.length - 1){\n                errorLines = errorLines + \" and \" + this.props.userErrors[i]\n            }else{\n                errorLines = errorLines + this.props.userErrors[i] +  \", \"\n            }\n        }\n            return errorLines\n    }\n\n    render(){\n            let message = null\n\n            if(this.generateErrorString() !== \"\"){\n\n                message = \"error: line\"+ this.generateErrorString()+\" has a has a start ascension that is equal to or greater than end ascension\"\n            }\n        return <p> {message} </p>\n    }\n    \n}\n\nconst mapStateToProps =(state)=>{\n    return {\n        userErrors: state.errorHandlingReducer.arrayOfAscnsionErrors\n    }\n}\n\nexport default connect(mapStateToProps)(ErrorHandling)","\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport PotionDisplay from \"./PotionDisplay\"\nimport ConvertPotion from \"./ConvertPotionsToEnergy\"\nimport ErrorHandling from \"./ErrorHandling\"\n\nclass PoitonMap extends React.Component{\n\n    render(){\n        let arrayOfPoitions = Object.keys(this.props.potionState)\n         \n        arrayOfPoitions = arrayOfPoitions.map( e => <PotionDisplay key={e} potion ={e} />)\n\n        return <div className =\"floatRightTest\">\n            <ErrorHandling />\n            {arrayOfPoitions}\n            {/* <ConvertPotion /> */}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) =>{\n\n    return {\n        potionState: state.potionCountReducer\n    }\n}\n\nexport default connect(mapStateToProps)(PoitonMap)\n\n","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport {poitons} from \"../pots_value\"\nimport PoitonMap from \"./PoitonMap\"\n\nclass PotionReducerSorter extends React.Component{\n    \n    iterateOverDesiredFormData=()=>{\n\n        // sets store to 0 of everything, if you just add without emptying the store, it generates to many potions\n        this.props.blank()\n        this.props.default()\n\n        for(let i = 0; i < this.props.desiredFormData.length; i++){\n            this.checkObject(this.props.desiredFormData[i])\n\n        }\n    }\n    \n    checkObject =(object)=>{\n\n        if(Object.values(object).includes(null)  !== true && object[\"startAscension\"] <  object[\"endAscension\"] && object[\"quanity\"] !== 0 ){\n            return this.addToStore(object)\n        }else if (Object.values(object).includes(null) !== true && object[\"startAscension\"] >= object[\"endAscension\"]){\n            \n            // adds the line number of the object to an array of all objects with starting ascesnion >= ending ascension \n            this.props.error(String([object.id +1]))\n        }\n    }\n\n    addToStore =(object)=>{\n\n        // debugger\n\n        let potionsObject = poitons\n\n        let startLevel = object[\"startAscension\"]\n        startLevel = parseInt(startLevel) +1\n\n        for(let i = startLevel; i <= object[\"endAscension\"]; i++){\n            \n            let poitonRareityAndLevel = object[\"Rareity\"]+i\n\n            /// creates two key value paris, to be feed into the potions store, ex. key1 = \"Grater Arcane\" value1= 0\n\n            let key1 = Object.keys(potionsObject[poitonRareityAndLevel][\"Arcane\"])[0]\n            \n            let value1 = Object.values(potionsObject[poitonRareityAndLevel][\"Arcane\"])[0]\n            \n            let key2 = Object.keys(potionsObject[poitonRareityAndLevel][object[\"Affinity\"]])[0]\n            \n            let value2 = Object.values(potionsObject[poitonRareityAndLevel][object[\"Affinity\"]])[0]\n            \n            this.props.add(key1,value1,key2,value2, object.quanity)\n\n            // debugger\n        }\n\n        \n    }\n\n  render(){\n      this.iterateOverDesiredFormData()\n      return (\n          <PoitonMap />\n      )\n  }\n\n}\n\nconst mapDispatchToProps =(dispatch) =>{\n    return {\n        blank: () => dispatch({type: \"BLANKSTATE\"}),\n        default: ()=> dispatch({type: \"DEFAULTSTATE\"}),\n        add: (key1,value1, key2,value2, quanity) => dispatch({type: \"INCREMENTPOTION\",key1,value1,key2,value2, quanity}),\n        error: (int) => dispatch({type: \"ADDTOARRAY\",int}),\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        desiredFormData: state.desiredResouceReducer.desiredFormData\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(PotionReducerSorter)","import React from 'react'\n\nfunction ParagrahBlurb (){\n\n        return <p>\n            Hello this is a tool for the game “Raid Shadow Legends”, focused on the ascension mechanic. I have found it hard to know what resources are needed to gain ascension levels, due to a lack of transparency and shifting needs as you acquire new champions. In order to address this, I created a tool to allow players to enter information about their ascension needs. As you fill out the form bellow, this tool provides a count of all ascension material needed.\n        </p>\n        \n}\n\nexport default ParagrahBlurb","import React from \"react\"\nimport DesiredResourceForm from \"./componets/UserInputTable/DesiredResourceForm\"\nimport PotionReducerSorter from \"./componets/PotionReducerSorter\"\nimport ParagrahBlurb from \"./componets/ParagraphBlurb\"\nimport \"./form.css\"\n\nfunction App(){\n\n  return <div>\n    <ParagrahBlurb />\n    <div className=\"testFour\">\n    <DesiredResourceForm/>\n    <PotionReducerSorter />\n    </div>\n  </div> \n  \n}\n\nexport default App","const initialState = {\n    desiredFormData: [{\n        \"Rareity\": \"choose\", \n        \"Affinity\": \"choose\", \n        startAscension: 0, \n        endAscension: 1, \n        id: 1, \n        quanity: 0\n    }]\n}\n\nconst desiredResouceReducer =(state = initialState, action)=>{\n\n    switch(action.type){\n        case \"ADDOBJECT\":\n            return {\n                desiredFormData: state.desiredFormData.concat(action.payload)\n            }\n    \n        case \"EDIT\":\n\n            return {\n                ...state,\n                 desiredFormData: state.desiredFormData.map( (e) =>{\n                    if(e.id === action.payload.id){\n\n                        e[action.payload.key] = action.payload.value\n                        return e\n                    }\n                    return e\n                })\n            \n            }\n        \n        case \"CHANGEQUANITY\":\n        \n            return{\n                ...state,\n                desiredFormData: state.desiredFormData.map( (e) =>{\n                    if(e.id === action.objectId){\n                        e.quanity = parseInt(action.newQuainity)\n                        return e\n                    }\n                    return e\n                })\n            }\n\n        case \"DELETE\":\n            return{\n                ...state,\n                desiredFormData: action.payload\n            }\n        case \"TESTQUALITY\":\n\n            return {\n                ...state,\n                desiredFormData: state.desiredFormData.map((e) =>{ \n                    if( e.id === action.payload.id){\n                        e[action.payload.field] = parseInt(action.payload.value)\n\n                        return e\n                    }\n                        return e\n                })\n            }\n        \n\n    default: \n        return state\n\n    }\n\n}\n\nexport default desiredResouceReducer","const initialState = {\n    \"Lesser Arcane\": 0,\n    \"Greater Arcane\": 0,\n    \"Superior Arcane\": 0,\n    \"Lesser Magic\": 0,\n    \"Greater Magic\": 0,\n    \"Superior Magic\": 0,\n    \"Lesser Void\": 0,\n    \"Greater Void\": 0,\n    \"Superior Void\": 0,\n    \"Lesser Force\": 0,\n    \"Greater Force\": 0,\n    \"Superior Force\": 0,\n    \"Lesser Spirit\": 0,\n    \"Greater Spirit\": 0,\n    \"Superior Spirit\": 0,\n}\n\nconst potionCountReducer =( state = initialState, action)=>{\n    switch(action.type){\n\n        case \"INCREMENTPOTION\":\n            // debugger\n            return {\n                ...state,\n               [action.key1]: state[action.key1] + action.value1 * action.quanity,\n               [action.key2]: state[action.key2] + action.value2 * action.quanity,   \n            }\n\n        case \"BLANKSTATE\": {\n           \n            return {\n            ...initialState\n            }\n        }\n\n        default: \n            return state\n    }\n\n}\n\n\nexport default potionCountReducer","const intialState = {\n    energy: 0\n}\n\n\nconst energyReducer =( state = intialState, action)=>{\n\n    switch(action.type){\n\n        case \"INCREASEENERGY\": {\n\n            // debugger \n\n            return {\n                ...state,\n                energy: state.energy + action.payload\n            }\n        }\n\n        case \"INTIALSTATE\": {\n            return {\n                ...intialState\n            }\n        }\n\n        default: \n            return state \n    }\n\n}\n\nexport default energyReducer","const intialState =  {\n    arrayOfAscnsionErrors: [ ]\n} \n\n\nconst errorHandlingReducer = (state =intialState, action) =>{\n\n    switch(action.type){\n\n        case \"ADDTOARRAY\":\n            // debugger\n        return  {\n            ...state,\n            arrayOfAscnsionErrors: state.arrayOfAscnsionErrors.concat(action.int)\n        }\n\n        case \"DEFAULTSTATE\":\n\n            return {\n                ...intialState\n            }\n\n        default: \n            return state\n    }\n}\n\n\nexport default errorHandlingReducer","import { combineReducers } from \"redux\";\nimport desiredResouceReducer  from \"./desiredResouceReducer\"\nimport potionCountReducer from \"./potionCountReducer\";\nimport energyReducer from \"./energyReducer\";\nimport errorHandlingReducer from \"./errorHandlingReducer\";\n\nconst rootReducer = combineReducers({desiredResouceReducer, potionCountReducer, energyReducer,errorHandlingReducer})\n\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport {Provider} from \"react-redux\"\nimport thunk from \"redux-thunk\"\nimport rootReducer from './Store/reducers/index'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n const store = createStore(rootReducer ,composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n,document.getElementById('root')\n);\n\n"],"sourceRoot":""}